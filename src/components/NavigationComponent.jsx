import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import BookCategoryService from '../services/bookCategoryService';
import '../styles/NavigationComponent.css';
import { useAuth } from '../components/AuthContext';

const NavigationComponent = ({ onSearch, onGenreChange, categories, setCategories, basketCount }) => {
  const [showModal, setShowModal] = useState(false);
  const [genre, setGenre] = useState('');
  const [dropdownOpen, setDropdownOpen] = useState(false);

  const { currentUser, userRole, logOut } = useAuth();
  const navigate = useNavigate();

  useEffect(() => {}, [currentUser, userRole]);

  const handleAddCategory = async () => {
    if (!genre.trim()) {
      alert("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
      return;
    }

    try {
      const response = await BookCategoryService.addCategory({ genre });
      alert('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
      setCategories(prev => [...prev, response.data]);
      setGenre('');
      setShowModal(false);
    } catch (error) {
      const message = error.response?.data?.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
      alert(message);
    }
  };

  const handleGenreSelect = (genreId) => {
    onGenreChange(genreId === 'all' ? null : genreId);
    navigate('/');
    setDropdownOpen(false);
  };

  const handleInputChange = (e) => onSearch(e.target.value);

  return (
    <>
      <nav className="navbar">
        <div className="navbar-left">
          <div className="navbar-logo">üìö –ö–Ω–∏–∂–Ω—ã–π –ê—Ä—Ö–∏–≤</div>
          <ul className="navbar-links">
            <li
              className="dropdown"
              onMouseEnter={() => setDropdownOpen(true)}
              onMouseLeave={() => setDropdownOpen(false)}
            >
              <button className="nav-button">–ö–Ω–∏–≥–∏ ‚ñæ</button>
              {dropdownOpen && (
                <div className="dropdown-content">
                  <button onClick={() => handleGenreSelect('all')}>–í—Å–µ –∂–∞–Ω—Ä—ã</button>
                  {categories.map((cat) => (
                    <button key={cat.categoryId} onClick={() => handleGenreSelect(cat.categoryId)}>
                      {cat.genre}
                    </button>
                  ))}
                </div>
              )}
            </li>

            {currentUser && userRole === "ROLE_ADMIN" && (
              <>
                <li><Link to="/add-book">–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É</Link></li>
                <li><button className="plain-link-btn" onClick={() => setShowModal(true)}>–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</button></li>
                <li><Link to="/categories">–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</Link></li>
              </>
            )}
          </ul>
        </div>

        <div className="navbar-right">
          <input
            className="navbar-search-input"
            type="text"
            placeholder="–ü–æ–∏—Å–∫ - –Ω–∞–∑–≤–∞–Ω–∏–µ/–∞–≤—Ç–æ—Ä"
            onChange={handleInputChange}
          />

          {/* üü¢ –ò–∫–æ–Ω–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –∞–¥–º–∏–Ω–æ–≤) */}
          {currentUser && (
            <button
              className="nav-auth-btn"
              style={{ marginLeft: '10px' }}
              onClick={() => navigate('/basket')}
            >
              üõí {basketCount > 0 && <span>({basketCount})</span>}
            </button>
          )}

          {/* üìñ –ú–æ–∏ –∫–Ω–∏–≥–∏ ‚Äî –¥–ª—è –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
          {currentUser && (
            <button
              className="nav-auth-btn"
              style={{ marginLeft: '10px' }}
              onClick={() => navigate('/my-books')}
            >
              üìñ –ú–æ–∏ –∫–Ω–∏–≥–∏
            </button>
          )}

          {currentUser ? (
            <button className="nav-auth-btn" onClick={logOut} style={{ marginLeft: '10px' }}>–í—ã–π—Ç–∏</button>
          ) : (
            <Link to="/login" className="nav-auth-btn" style={{ marginLeft: '10px' }}>–í–æ–π—Ç–∏</Link>
          )}
        </div>
      </nav>

      {showModal && (
        <div className="modal-overlay">
          <div className="modal-content">
            <h2>–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</h2>
            <input
              type="text"
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∂–∞–Ω—Ä–∞"
              value={genre}
              onChange={(e) => setGenre(e.target.value)}
            />
            <div className="modal-buttons">
              <button onClick={handleAddCategory}>–î–æ–±–∞–≤–∏—Ç—å</button>
              <button onClick={() => setShowModal(false)}>–û—Ç–º–µ–Ω–∞</button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default NavigationComponent;
