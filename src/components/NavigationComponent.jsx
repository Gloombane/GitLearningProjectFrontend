import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import BookCategoryService from '../services/bookCategoryService';
import '../styles/NavigationComponent.css';

const NavigationComponent = ({ onSearch, onGenreChange }) => {
  const [showModal, setShowModal] = useState(false);
  const [genre, setGenre] = useState('');
  const [categories, setCategories] = useState([]);
  const [dropdownOpen, setDropdownOpen] = useState(false);

  const navigate = useNavigate();

  useEffect(() => {
    fetchCategories();
  }, []);

  const fetchCategories = async () => {
    try {
      const response = await BookCategoryService.getAllCategories();
      setCategories(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    }
  };

  const handleAddCategory = async () => {
    if (!genre.trim()) return;

    try {
      await BookCategoryService.addCategory({ genre });
      alert('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
      setGenre('');
      setShowModal(false);
      fetchCategories();
    } catch (error) {
      const message =
        error.response?.data?.message ||
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
      alert(message);
    }
  };

  const handleGenreChange = (genreId) => {
    onGenreChange(genreId === 'all' ? null : genreId);
    navigate('/'); // –ò–ª–∏ '/books', –µ—Å–ª–∏ —Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞–µ—à—å –∫–Ω–∏–≥–∏ —Ç–∞–º
    setDropdownOpen(false);
  };

  const handleInputChange = (e) => {
    onSearch(e.target.value);
  };

  return (
    <>
      <nav className="navbar">
        <div className="navbar-left">
          <div className="navbar-logo">üìö –ö–Ω–∏–∂–Ω—ã–π –ê—Ä—Ö–∏–≤</div>
          <ul className="navbar-links">
            <li
              className="dropdown"
              onMouseEnter={() => setDropdownOpen(true)}
              onMouseLeave={() => setDropdownOpen(false)}
            >
              <button className="nav-button">–ö–Ω–∏–≥–∏ ‚ñæ</button>
              {dropdownOpen && (
                <div className="dropdown-content">
                  <button onClick={() => handleGenreChange('all')}>–í—Å–µ –∂–∞–Ω—Ä—ã</button>
                  {categories.map((cat) => (
                    <button key={cat.categoryId} onClick={() => handleGenreChange(cat.categoryId)}>
                      {cat.genre}
                    </button>
                  ))}
                </div>
              )}
            </li>
            <li>
              <Link to="/add-book">–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É</Link>
            </li>
            <li>
              <button className="plain-link-btn" onClick={() => setShowModal(true)}>
                –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
              </button>
            </li>
          </ul>
        </div>
        <div className="navbar-search">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É..."
            onChange={handleInputChange}
          />
        </div>
      </nav>

      {showModal && (
        <div className="modal-overlay">
          <div className="modal-content">
            <h2>–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</h2>
            <input
              type="text"
              placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∂–∞–Ω—Ä–∞"
              value={genre}
              onChange={(e) => setGenre(e.target.value)}
            />
            <div className="modal-buttons">
              <button onClick={handleAddCategory}>–î–æ–±–∞–≤–∏—Ç—å</button>
              <button onClick={() => setShowModal(false)}>–û—Ç–º–µ–Ω–∞</button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default NavigationComponent;
