// App.js
import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import './App.css';
import ViewAllBooksComponent from './components/ViewAllBooksComponent';
import AddBookComponent from './components/AddBookComponent';
import NavigationComponent from './components/NavigationComponent';
import ViewAllCategoriesComponent from './components/ViewAllCategoriesComponent';
import BookCategoryService from './services/bookCategoryService';
import LoginComponent from './components/LoginComponent';
import RegisterComponent from './components/RegisterComponent';
import { AuthProvider } from './components/AuthContext';
import BasketComponent from './components/BasketComponent';
import MyBooksComponent from './components/MyBooksComponent';
import ChatComponent from './components/ChatComponent'; // üü¢ –¥–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç —á–∞—Ç–∞

function App() {
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedGenreId, setSelectedGenreId] = useState(null);
  const [categories, setCategories] = useState([]);

  // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  const [basket, setBasket] = useState(() => {
    const savedBasket = localStorage.getItem("basket");
    return savedBasket ? JSON.parse(savedBasket) : [];
  });

  // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –≤ localStorage –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    localStorage.setItem("basket", JSON.stringify(basket));
  }, [basket]);

  const handleSearch = (query) => setSearchQuery(query);
  const handleGenreChange = (genreId) => setSelectedGenreId(genreId);

  const addToBasket = (book) => {
    setBasket((prev) => {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ –±–æ–ª—å—à–µ 10 –∫–Ω–∏–≥
      if (prev.length >= 10) {
        alert("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –±–æ–ª—å—à–µ 10 –∫–Ω–∏–≥ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.");
        return prev;
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–Ω–∏–≥–∞ —É–∂–µ –µ—Å—Ç—å
      if (prev.some((b) => b.bookId === book.bookId)) {
        alert(`–ö–Ω–∏–≥–∞ "${book.bookName}" —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ.`);
        return prev;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É
      return [...prev, book];
    });
  };

  const removeFromBasket = (bookId) => {
    setBasket((prev) => prev.filter(b => b.bookId !== bookId));
  };

  // ‚úÖ –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ logout)
  const clearBasket = () => {
    setBasket([]);
    localStorage.removeItem("basket");
  };

  const fetchCategories = async () => {
    try {
      const response = await BookCategoryService.getAllCategories();
      setCategories(response.data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:", error);
    }
  };

  useEffect(() => {
    fetchCategories();
  }, []);

  return (
    <Router>
      <AuthProvider clearBasket={clearBasket}>
        <NavigationComponent
          onSearch={handleSearch}
          onGenreChange={handleGenreChange}
          categories={categories}
          setCategories={setCategories}
          basketCount={basket.length}
        />

        <div className="container">
          <Routes>
            <Route
              path="/"
              element={
                <ViewAllBooksComponent
                  searchQuery={searchQuery}
                  selectedGenreId={selectedGenreId}
                  categories={categories}
                  addToBasket={addToBasket}
                  basket={basket}
                />
              }
            />
            <Route
              path="/books"
              element={
                <ViewAllBooksComponent
                  searchQuery={searchQuery}
                  selectedGenreId={selectedGenreId}
                  categories={categories}
                  addToBasket={addToBasket}
                  basket={basket}
                />
              }
            />
            <Route path="/add-book" element={<AddBookComponent />} />
            <Route
              path="/categories"
              element={<ViewAllCategoriesComponent categories={categories} setCategories={setCategories} />}
            />
            <Route
              path="/basket"
              element={<BasketComponent basket={basket} removeFromBasket={removeFromBasket} clearBasket={clearBasket} />}
            />
            <Route
              path="/my-books"
              element={<MyBooksComponent />}
            />
            <Route path="/login" element={<LoginComponent />} />
            <Route path="/register" element={<RegisterComponent />} />
          </Routes>
        </div>

        {/* üí¨ –ß–∞—Ç ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö */}
        <ChatComponent />
      </AuthProvider>
    </Router>
  );
}

export default App;
